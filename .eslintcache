[{"D:\\WebDev\\ReactJS\\IT-INCUBATOR\\JSProject\\src\\redux\\state.ts":"1","D:\\WebDev\\ReactJS\\IT-INCUBATOR\\JSProject\\src\\containers\\CurrencyExchangeContainer\\CurrencyEContainer.tsx":"2","D:\\WebDev\\ReactJS\\IT-INCUBATOR\\JSProject\\src\\index.tsx":"3","D:\\WebDev\\ReactJS\\IT-INCUBATOR\\JSProject\\src\\App.tsx":"4","D:\\WebDev\\ReactJS\\IT-INCUBATOR\\JSProject\\src\\redux\\actions.ts":"5","D:\\WebDev\\ReactJS\\IT-INCUBATOR\\JSProject\\src\\components\\CurrencyExchange\\CurrencyExchange.tsx":"6","D:\\WebDev\\ReactJS\\IT-INCUBATOR\\JSProject\\src\\lessons\\lesson2\\lesson2.ts":"7","D:\\WebDev\\ReactJS\\IT-INCUBATOR\\JSProject\\src\\lessons\\lesson1\\lesson1.tsx":"8","D:\\WebDev\\ReactJS\\IT-INCUBATOR\\JSProject\\src\\redux\\selectors.ts":"9","D:\\WebDev\\ReactJS\\IT-INCUBATOR\\JSProject\\src\\lessons\\lesson3\\API.ts":"10","D:\\WebDev\\ReactJS\\IT-INCUBATOR\\JSProject\\src\\lessons\\lesson3\\Lesson3.tsx":"11","D:\\WebDev\\ReactJS\\IT-INCUBATOR\\JSProject\\src\\lessons\\lesson3\\lesson_3.ts":"12","D:\\WebDev\\ReactJS\\IT-INCUBATOR\\JSProject\\src\\redux\\currencyReducer.ts":"13","D:\\WebDev\\ReactJS\\IT-INCUBATOR\\JSProject\\src\\lessons\\lesson4\\Lesson4.tsx":"14","D:\\WebDev\\ReactJS\\IT-INCUBATOR\\JSProject\\src\\lessons\\lesson4\\lesson_4.ts":"15","D:\\WebDev\\ReactJS\\IT-INCUBATOR\\JSProject\\src\\lessons\\lesson5\\lesson5.ts":"16","D:\\WebDev\\ReactJS\\IT-INCUBATOR\\JSProject\\src\\lessons\\lesson6\\lesson6.ts":"17","D:\\WebDev\\ReactJS\\IT-INCUBATOR\\JSProject\\src\\lessons\\lesson7\\lesson7.ts":"18","D:\\WebDev\\ReactJS\\IT-INCUBATOR\\JSProject\\src\\lessons\\lesson7\\file.js":"19","D:\\WebDev\\ReactJS\\IT-INCUBATOR\\JSProject\\src\\lessons\\lesson8\\lesson_8.js":"20"},{"size":286,"mtime":1609751766000,"results":"21","hashOfConfig":"22"},{"size":6884,"mtime":1612695724848,"results":"23","hashOfConfig":"22"},{"size":720,"mtime":1616778129764,"results":"24","hashOfConfig":"22"},{"size":705,"mtime":1615052368748,"results":"25","hashOfConfig":"22"},{"size":1670,"mtime":1612686669697,"results":"26","hashOfConfig":"22"},{"size":3871,"mtime":1609757734000,"results":"27","hashOfConfig":"22"},{"size":7437,"mtime":1613827876485,"results":"28","hashOfConfig":"22"},{"size":860,"mtime":1609756876000,"results":"29","hashOfConfig":"22"},{"size":597,"mtime":1612687677592,"results":"30","hashOfConfig":"22"},{"size":449,"mtime":1613844066247,"results":"31","hashOfConfig":"22"},{"size":2615,"mtime":1613841732563,"results":"32","hashOfConfig":"22"},{"size":1404,"mtime":1614435652437,"results":"33","hashOfConfig":"22"},{"size":1689,"mtime":1612684884444,"results":"34","hashOfConfig":"22"},{"size":530,"mtime":1614505619619,"results":"35","hashOfConfig":"22"},{"size":10281,"mtime":1614706249954,"results":"36","hashOfConfig":"22"},{"size":10639,"mtime":1615572481562,"results":"37","hashOfConfig":"22"},{"size":10762,"mtime":1616239801965,"results":"38","hashOfConfig":"22"},{"size":3425,"mtime":1616777930875,"results":"39","hashOfConfig":"22"},{"size":4617,"mtime":1616777841392,"results":"40","hashOfConfig":"22"},{"size":17188,"mtime":1616934560525,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"1ug19g4",{"filePath":"45","messages":"46","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"44"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"44"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"44"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"44"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"44"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"44"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"89"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\WebDev\\ReactJS\\IT-INCUBATOR\\JSProject\\src\\redux\\state.ts",[],["92","93"],"D:\\WebDev\\ReactJS\\IT-INCUBATOR\\JSProject\\src\\containers\\CurrencyExchangeContainer\\CurrencyEContainer.tsx",["94","95","96","97","98","99","100","101","102","103"],"import React from 'react';\r\nimport CurrencyExchange from '../../components/CurrencyExchange/CurrencyExchange';\r\nimport { CurrencyState, CurrencyType } from '../../redux/currencyReducer';\r\nimport { Dispatch } from 'redux';\r\nimport {\r\n    ChangeActionAC,\r\n    ChangeCurrencyFieldAC,\r\n    ChangeCurrentCurrencyAC,\r\n    useDispatch,\r\n    CurrencyReducersTypes,\r\n} from '../../redux/actions';\r\nimport { connect, ConnectedProps, useSelector } from 'react-redux';\r\nimport {\r\n    selectAllState,\r\n    selectAmountOfBYN,\r\n    selectAmountOfCurrency,\r\n    selectCurrencies,\r\n    selectCurrentCurrency,\r\n    selectIsBuying\r\n} from '../../redux/selectors';\r\n\r\n// type PropsType = CurrencyState & {\r\n//     ChangeCurrencyFieldAC: Function,\r\n//     ChangeActionAC: Function,\r\n//     ChangeCurrentCurrencyAC: Function\r\n// }\r\n\r\n// interface IProps extends CurrencyState {\r\n//     ChangeCurrencyFieldAC: Function,\r\n//     ChangeActionAC: Function,\r\n//     ChangeCurrentCurrencyAC: Function\r\n// }\r\n\r\n//const CurrencyEContainer: React.FC<TProps> = props => {\r\n// const CurrencyEContainer: React.FC<CurrencyState> = props => {\r\n\r\n    const CurrencyEContainer: React.FC = () => {\r\n\r\n    // const {\r\n    //     currencies,\r\n    //     currentCurrency,\r\n    //     isBuying,\r\n    //     amountOfBYN,\r\n    //     amountOfCurrency,\r\n    //     setCurrencyAmount,\r\n    //     setAction,\r\n    //     changeCurrency,\r\n    // } = props;\r\n\r\n    // const {\r\n    //     currencies,\r\n    //     currentCurrency,\r\n    //     isBuying,\r\n    //     amountOfBYN,\r\n    //     amountOfCurrency,\r\n    //     ChangeCurrencyFieldAC,\r\n    //     ChangeActionAC,\r\n    //     ChangeCurrentCurrencyAC\r\n    // } = props;\r\n\r\n\r\n    // const {\r\n    //     currencies,\r\n    //     currentCurrency,\r\n    //     isBuying,\r\n    //     amountOfBYN,\r\n    //     amountOfCurrency,\r\n    // } = props;\r\n\r\n    const dispatch = useDispatch();\r\n    // const currencies = useSelector(selectCurrencies);\r\n    // const currentCurrency = useSelector(selectCurrentCurrency);\r\n    // const isBuying = useSelector(selectIsBuying);\r\n    // const amountOfBYN = useSelector(selectAmountOfBYN);\r\n    // const amountOfCurrency = useSelector(selectAmountOfCurrency);\r\n\r\n    const { currencies,currentCurrency,isBuying,amountOfBYN,amountOfCurrency } = useSelector(selectAllState);\r\n\r\n\r\n    let currencyRate: number = 0;\r\n    const currenciesName = currencies.map((currency: CurrencyType) => {\r\n        if (currency.currencyName === currentCurrency) {\r\n            currencyRate = isBuying ? currency.buyRate : currency.sellRate;\r\n        }\r\n        return currency.currencyName;\r\n    });\r\n\r\n\r\n    const changeCurrencyField = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        let value = e.currentTarget.value;\r\n        if (!isFinite(+value)) return;\r\n        if (e.currentTarget.dataset.currency) {\r\n            const trigger: string = e.currentTarget.dataset.currency;\r\n            if (trigger === 'byn') {\r\n                if (value === '') {\r\n                    // setCurrencyAmount(value, value);\r\n                    // ChangeCurrencyFieldAC(value, value);\r\n                    dispatch(ChangeCurrencyFieldAC(value, value));\r\n                } else {\r\n                    // setCurrencyAmount(value, (+Number(value).toFixed(2) / currencyRate).toFixed(2));\r\n                    // ChangeCurrencyFieldAC(value, (+Number(value).toFixed(2) / currencyRate).toFixed(2));\r\n                    dispatch(ChangeCurrencyFieldAC(value, (+Number(value).toFixed(2) / currencyRate).toFixed(2)));\r\n                }\r\n            } else {\r\n                if (value === '') {\r\n                    // setCurrencyAmount(value, value);\r\n                    // ChangeCurrencyFieldAC(value, value);\r\n                    dispatch(ChangeCurrencyFieldAC(value, value));\r\n                } else {\r\n                    // setCurrencyAmount((+Number(value).toFixed(2) * currencyRate).toFixed(2), value);\r\n                    // ChangeCurrencyFieldAC((+Number(value).toFixed(2) * currencyRate).toFixed(2), value);\r\n                    dispatch(ChangeCurrencyFieldAC((+Number(value).toFixed(2) * currencyRate).toFixed(2), value));\r\n                }\r\n            }\r\n        }\r\n    };\r\n    const changeAction = (e: React.MouseEvent<HTMLSpanElement>) => {\r\n        // e.currentTarget.dataset.action === 'buy' ? setAction(true) : setAction(false);\r\n        // e.currentTarget.dataset.action === 'buy' ? ChangeActionAC(true) : ChangeActionAC(false);\r\n        e.currentTarget.dataset.action === 'buy' ? dispatch(ChangeActionAC(true)) : dispatch(ChangeActionAC(false));\r\n    };\r\n\r\n    const changeCurrentCurrency = (e: React.MouseEvent<HTMLLIElement>) => {\r\n        // e.currentTarget.dataset.currency && changeCurrency(e.currentTarget.dataset.currency);\r\n        // e.currentTarget.dataset.currency && ChangeCurrentCurrencyAC(e.currentTarget.dataset.currency);\r\n        e.currentTarget.dataset.currency && dispatch(ChangeCurrentCurrencyAC(e.currentTarget.dataset.currency));\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <CurrencyExchange\r\n                currenciesName={currenciesName}\r\n                currentCurrency={currentCurrency}\r\n                currencyRate={currencyRate}\r\n                isBuying={isBuying}\r\n                amountOfBYN={amountOfBYN}\r\n                amountOfCurrency={amountOfCurrency}\r\n                changeCurrencyField={changeCurrencyField}\r\n                changeAction={changeAction}\r\n                changeCurrentCurrency={changeCurrentCurrency}\r\n            />\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\n// const mapStateToProps = ( { currency } : {currency: CurrencyState} ): CurrencyState => {\r\n//     return {\r\n//         currencies: currency.currencies,\r\n//         currentCurrency: currency.currentCurrency,\r\n//         isBuying: currency.isBuying,\r\n//         amountOfBYN: currency.amountOfBYN,\r\n//         amountOfCurrency: currency.amountOfCurrency,\r\n//     };\r\n// };\r\n\r\n// const mapDispatchToProps = (dispatch: Dispatch<CurrencyReducersTypes>) : any => {\r\n//     return {\r\n//         setCurrencyAmount(amountOfBYN: string, amountOfCurrency: string) {\r\n//             dispatch(ChangeCurrencyFieldAC(amountOfBYN, amountOfCurrency));\r\n//         },\r\n//         setAction(isBuying: boolean) {\r\n//             dispatch(ChangeActionAC(isBuying));\r\n//         },\r\n//         changeCurrency(currency: string) {\r\n//             dispatch(ChangeCurrentCurrencyAC(currency));\r\n//         },\r\n//     };\r\n// };\r\n\r\n// const connector = connect(mapStateToProps, mapDispatchToProps);\r\n//\r\n// type TProps = ConnectedProps<typeof connector>;\r\n//\r\n// export default connector(CurrencyEContainer);\r\n\r\n// export default connect(mapStateToProps, {ChangeCurrencyFieldAC, ChangeActionAC, ChangeCurrentCurrencyAC})(CurrencyEContainer);\r\n\r\n//export default connect(mapStateToProps, {})(CurrencyEContainer);\r\n\r\nexport default CurrencyEContainer;\r\n\r\n","D:\\WebDev\\ReactJS\\IT-INCUBATOR\\JSProject\\src\\index.tsx",["104","105","106","107","108","109"],"D:\\WebDev\\ReactJS\\IT-INCUBATOR\\JSProject\\src\\App.tsx",[],"D:\\WebDev\\ReactJS\\IT-INCUBATOR\\JSProject\\src\\redux\\actions.ts",[],"D:\\WebDev\\ReactJS\\IT-INCUBATOR\\JSProject\\src\\components\\CurrencyExchange\\CurrencyExchange.tsx",[],["110","111"],"D:\\WebDev\\ReactJS\\IT-INCUBATOR\\JSProject\\src\\lessons\\lesson2\\lesson2.ts",["112","113","114","115"],"export const b = \"lesson2\";\n\n// Lexical environment\n// http://jsflow.org/docs/lex-env/\n\n//// Closure\n// https://learn.javascript.ru/closure\n// https://developer.mozilla.org/ru/docs/Web/JavaScript/Closures\n// https://medium.com/@stasonmars/%D0%BF%D0%BE%D0%BD%D0%B8%D0%BC%D0%B0%D0%B5%D0%BC-%D0%B7%D0%B0%D0%BC%D1%8B%D0%BA%D0%B0%D0%BD%D0%B8%D1%8F-%D0%B2-javascript-%D1%80%D0%B0%D0%B7-%D0%B8-%D0%BD%D0%B0%D0%B2%D1%81%D0%B5%D0%B3%D0%B4%D0%B0-c211805b6898\n// https://www.youtube.com/watch?v=pahO5XjnfLA\n\n//// Сurrying\n// https://learn.javascript.ru/currying-partials\n// https://medium.com/@stasonmars/%D0%BF%D0%BE%D0%BD%D0%B8%D0%BC%D0%B0%D0%B5%D0%BC-%D0%BA%D0%B0%D1%80%D1%80%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D0%B5-%D0%B2-javascript-5ec4a1d88827\n\n// Pattern Module\n// https://habr.com/ru/company/ruvds/blog/419997/\n\n// Recursion\n// https://learn.javascript.ru/recursion\n// https://www.youtube.com/watch?v=Kuq6oIN3PH0\n\n// let a = 10;\n// let b = 15;\n//\n// // globalScope\n// let globalScope = {\n//     a: 10,\n//     b: 15\n// }\n//\n// function testFunc() {\n//     //let a = 100;\n//     console.log(a); // testFuncScope.a == undefined // outerScope.a => globalScope.a == 10\n//     function innerFunc() {\n//         let a = 5;\n//         console.log(a); // innerFuncScope.a == undefined // outerScope.a => testFuncScope.a == undefined // outerScope.a => globalScope.a == 10\n//     }\n// }\n//\n// // testFuncScope\n// let testFuncScope = {\n//     outerScope: globalScope,\n//     //a: 100,\n// }\n//\n// // innerFuncScope\n// let innerFuncScope = {\n//     outerScope: testFuncScope,\n//     a: 5,\n// }\n\n\n// function f() {\n//     let a = 10;\n//     return function(b:number) {\n//         return a + b;\n//     }\n// }\n//\n// let parm = f();\n//\n// console.log(parm(45))//55\n\n// Task 01\n// Реализовать функцию sum которая суммирует 2 числа следующим образом sum(3)(6) === 9\n\n// function sum(n:number) {\n//     return function (n2: number) {\n//         return n + n2;\n//     }\n// }\n//\n// console.log(sum(3)(6));\n\n// Task 02\n// Реализовать функцию makeCounter которая работает следующим образом:\n// const counter = makeCounter();\n// counter(); // 1\n// counter(); // 2\n// const counter2 = makeCounter();\n// counter2(); // 1\n// counter(); // 3\n\n// function makeCounter() {\n//     let count = 0;\n//     return function () {\n//         return ++count;\n//     }\n// }\n\n// function makeCounter() {\n//     let count = 1;\n//     return function () {\n//         return count++;\n//     }\n// }\n\n// function makeCounter() {\n//     let count = 0;\n//     return function () {\n//         count += 1;\n//         return count;\n//     }\n// }\n//\n// let makeCounterScope = {\n//     outerScope: window,\n//     count: 0, // 1 // 2\n// }\n//\n// let innerFunctionScope = {\n//     outerScope: makeCounterScope\n// }\n//\n// const counter = makeCounter();\n// console.log(counter()); // 1 // innerFunctionScope.count == undefined / innerFunctionScope.outerScope.count => 0 / innerFunctionScope.outerScope.count = 1\n// console.log(counter()); // 2 // innerFunctionScope.count == undefined / innerFunctionScope.outerScope.count => 1 / innerFunctionScope.outerScope.count = 2\n// const counter2 = makeCounter();\n// console.log(counter2()); // 1\n// console.log(counter()); // 3\n\n// Task 03\n// Переписать функцию из Task 02 так, что бы она принимала число в качестве аргумента и это число было стартовым значением счетчика\n// и возвращала следующий объект методов:\n// increase: +1\n// decrease: -1\n// reset: установить счетчик в 0;\n// set: установить счетчик в заданное значение;\n\n// function makeCounter(startCount: number) {\n//     return {\n//         increase: () => ++startCount,\n//         decrease() {\n//             return --startCount;\n//         },\n//         decrease: function() {\n//                   some code///\n//         },\n//         reset: () => {\n//             startCount = 0;\n//             return startCount;\n//         },\n//         set: (newCount: number) => {\n//             startCount = newCount;\n//             return startCount;\n//         },\n//         getCount: () => startCount,\n//     };\n// }\n//\n// let counter = makeCounter(10);\n// counter.increase();\n// counter.increase();\n// counter.increase();\n// console.log(counter.getCount());\n// let counter2 = makeCounter(0);\n// counter2.set(100);\n// counter2.decrease();\n// console.log(counter2.getCount());\n// counter.increase();\n// console.log(counter.getCount());\n\n\n//  Recursion\n\n// sumTo(1) = 1\n// sumTo(2) = 2 + 1 = 3\n// sumTo(3) = 3 + 2 + 1 = 6\n// sumTo(4) = 4 + 3 + 2 + 1 = 10\n// ...\n// sumTo(100) = 100 + 99 + ... + 2 + 1 = 5050\n\n// function sumToByLoop(n:number) {\n//     let result = 0;\n//     for (let i = n; i >= 0 ; i--) {\n//         result += i;\n//     }\n//     return result;\n// }\n//\n// console.log(sumToByLoop(100));\n\n// function sumTo(n:number): number {\n//     if (n === 1) return n;\n//     return n + sumTo(n - 1);\n// }\n//\n// console.log(sumTo(3));\n\n// function sumTo(n:number, acc: number): number {\n//     if (n === 1) return acc + n;\n//     return sumTo(n - 1, acc + n);\n// }\n//\n// console.log(sumTo(3, 0));\n\n//\n// 1! = 1\n// 2! = 2 * 1 = 2\n// 3! = 3 * 2 * 1 = 6\n// 4! = 4 * 3 * 2 * 1 = 24\n// 5! = 5 * 4 * 3 * 2 * 1 = 120\n\n// function factorial(n:number): number {\n//     if(n === 1) return n;\n//     return n * factorial(n - 1 );\n// }\n//\n// console.log(factorial(5))\n\n\n// Task 04*\n// Реализовать функцию superSum которая принимает число в качестве аргумента, которое указывает на количество слагаемых\n// и что бы корректно работали следующие вызовы:\n// 1) superSum(0) //0\n// 2) superSum(3)(2)(5)(3) //10\n// 3) superSum(3)(2)(5,3) //10\n// 4) superSum(3)(2,5,3) //10\n// 5) superSum(3)(2,5)(3) //10\n// 6) superSum(3)(2,5)(3,9) //10\n\nfunction superSum(n: number): any {\n  if(n === 0) return 0;\n  if(n === 1) return (num: number) => num;\n\n  let _arguments: number[] = [];\n\n  function helper(...args: number[]) {\n    _arguments = [..._arguments, ...args];\n    if(_arguments.length >= n) {\n      _arguments.length = n;\n      return _arguments.reduce((acc, number) => acc + number);\n    } else {\n      return helper;\n    }\n  }\n  return helper;\n}\n\n/*console.log(superSum(0))\nconsole.log(superSum(3)(2)(5)(3))\nconsole.log(superSum(3)(2,5,3))\nconsole.log(superSum(3)(2,5)(3,9))*/\n\n\n\n// P.S. типизируйте только аргументы, а при вызове функции используйте @ts-ignore\n\n// Task 05\n// решить все задачи по рекурсии которые даны в конце статьи https://learn.javascript.ru/recursion\n\n// Task 06\n// написать функцию, которая повторяет функционал метода flat массива на всю глубину.\n// console.log(\"Task 06 ---------\");\nconst testArr= [1, 2, 3, [1, 22, 44, [55, 17, 7]]];\n\nconst myFlat = (arr: any): any => {\n  return arr.reduce((prev: any, next: any) => {\n      return prev.concat(Array.isArray(next) ? myFlat(next) : next)\n  }, [])\n};\n\n// myFlat(testArr);\n// console.log(myFlat(testArr))\n\n// just a plug\nexport default () => {};\n","D:\\WebDev\\ReactJS\\IT-INCUBATOR\\JSProject\\src\\lessons\\lesson1\\lesson1.tsx",[],"D:\\WebDev\\ReactJS\\IT-INCUBATOR\\JSProject\\src\\redux\\selectors.ts",[],"D:\\WebDev\\ReactJS\\IT-INCUBATOR\\JSProject\\src\\lessons\\lesson3\\API.ts",[],"D:\\WebDev\\ReactJS\\IT-INCUBATOR\\JSProject\\src\\lessons\\lesson3\\Lesson3.tsx",[],"D:\\WebDev\\ReactJS\\IT-INCUBATOR\\JSProject\\src\\lessons\\lesson3\\lesson_3.ts",["116","117"],"import axios from \"axios\";\n\n// console.log(\"lesson 3\");\n\n// Event loop\n// https://learn.javascript.ru/event-loop\n// https://habr.com/ru/company/ruvds/blog/340508/\n// https://www.youtube.com/watch?v=8aGhZQkoFbQ\n// https://www.youtube.com/watch?v=j4_9BZezSUA\n\n// Promise\n// https://learn.javascript.ru/promise-basics\n// https://www.youtube.com/watch?v=1idOY3C1gYU\n\n// https://jsonplaceholder.typicode.com/posts/1\n// https://habr.com/ru/company/oleg-bunin/blog/417461/?_ga=2.54695343.543933152.1602500664-1040035071.1596811661\n\n// just a plug\n/*const JSONPlaceholderConfig = {\n  baseURL: \"https://jsonplaceholder.typicode.com\",\n  headers: {\n    \"Content-type\": \"application/json; charset=UTF-8\",\n  },\n};\n\nconst axiosInstance2 = axios.create(JSONPlaceholderConfig);\n\nexport const JSONPlaceholderAPI = {\n  getPosts: (userId: number) => {\n    return axiosInstance2.get(`posts`);\n  },\n  setPost: (postData: { title: string; body: string; userId: number }) => {\n    return axiosInstance2.post(`posts`, postData);\n  },\n};\n\nconst test = async () => {\n  await JSONPlaceholderAPI.getPosts(1).then((r) => {\n    console.log(r);\n  });\n  await JSONPlaceholderAPI.setPost({\n    title: \"First Post\",\n    body: \"Hello this is my firs post\",\n    userId: 1,\n  }).then((r) => {\n    console.log(r);\n  });\n  await JSONPlaceholderAPI.getPosts(1).then((r) => {\n    console.log(r);\n  });\n};\n\ntest();*/\n\nexport default () => {};\n\n\n\n","D:\\WebDev\\ReactJS\\IT-INCUBATOR\\JSProject\\src\\redux\\currencyReducer.ts",[],"D:\\WebDev\\ReactJS\\IT-INCUBATOR\\JSProject\\src\\lessons\\lesson4\\Lesson4.tsx",[],"D:\\WebDev\\ReactJS\\IT-INCUBATOR\\JSProject\\src\\lessons\\lesson4\\lesson_4.ts",["118"],"console.log('lesson 4');\r\n\r\n// http://latentflip.com/loupe/?code=JC5vbignYnV0dG9uJywgJ2NsaWNrJywgZnVuY3Rpb24gb25DbGljaygpIHsKICAgIHNldFRpbWVvdXQoZnVuY3Rpb24gdGltZXIoKSB7CiAgICAgICAgY29uc29sZS5sb2coJ1lvdSBjbGlja2VkIHRoZSBidXR0b24hJyk7ICAgIAogICAgfSwgMjAwMCk7Cn0pOwoKY29uc29sZS5sb2coIkhpISIpOwoKc2V0VGltZW91dChmdW5jdGlvbiB0aW1lb3V0KCkgewogICAgY29uc29sZS5sb2coIkNsaWNrIHRoZSBidXR0b24hIik7Cn0sIDUwMDApOwoKY29uc29sZS5sb2coIldlbGNvbWUgdG8gbG91cGUuIik7!!!PGJ1dHRvbj5DbGljayBtZSE8L2J1dHRvbj4%3D\r\n// https://jakearchibald.com/2015/tasks-microtasks-queues-and-schedules/\r\n\r\n\r\n//? Task 01\r\n//? Создайте промис, который постоянно находиться в состоянии pending.\r\n//? В конструкторе промиса выведите в консоль сообщение \"Promise is created\".\r\n/*console.log(\"---------------Task 01-----------------\")\r\nconst p = new Promise((res, rej) => {\r\n    console.log('Promise is created')\r\n})\r\nconsole.log(p)\r\nconsole.log(\"---------------Task 01-----------------\")*/\r\n\r\n\r\n//? Task 02\r\n//? Создайте промис, который после создания сразу же переходит в состояние resolve\r\n//? и возвращает строку 'Promise Data'\r\n//? Получите данные промиса и выведите их в консоль\r\n/*console.log(\"---------------Task 02-----------------\")\r\nconst p1 = Promise.resolve(\"'Promise Data'\")\r\nconsole.log(p1)\r\nconsole.log(\"---------------Task 02-----------------\")*/\r\n\r\n//? Task 03\r\n//? Создайте промис, который после создания сразу же переходит в состояние rejected\r\n//? и возвращает строку 'Promise Error'\r\n//? Получите данные промиса и выведите их в консоль\r\n/*console.log(\"---------------Task 03-----------------\")\r\nconst p2 = Promise.reject(\"'Promise Error'\")\r\nconsole.log(p1)\r\nconsole.log(\"---------------Task 03-----------------\")*/\r\n// ?Task 04\r\n// ?Создайте промис, который переходит в состояние resolved через 3с.\r\n// ?(Используйте setTimeout)\r\n// ?и возвращает строку 'Promise Data'\r\n// ?Получите данные промиса и выведите их в консоль\r\n\r\n/*setTimeout(() => console.log(\"---------------Task 04-----------------\"), 3000)\r\nconst p3 = new Promise((res, rej) => {\r\n    setTimeout(() => res(\"Promise Data\"), 3000)\r\n}).then(data => console.log(data));\r\nsetTimeout(() => console.log(\"---------------Task 04-----------------\"), 3000)*/\r\n\r\n//? Task 05\r\n//? Создайте литерал объекта handlePromise со следующими свойствами:\r\n//? promise, resolve, reject, onSuccess, onError\r\n//? Проинициализируйте первые три свойства null,\r\n//? а последние два функциями, которые принимают один параметр и выводят\r\n//? в консоль сообщения: первая - `Promise is resolved with data: ${paramName}`\r\n//? вторая - `Promise is rejected with error: ${paramName}`\r\n//? Создайте три обработчика события click для кнопок \"Create Promise\", \"Resolve Promise\", \"Reject Promise\".\r\n//? Первый обработчик, создает промис, заполняет первые три свойства,\r\n//? описаного выше объекта: свойство promise получает новый созданный промис,\r\n//? свойства resolve и reject получают ссылки на соответствующие функции\r\n//? resolve и reject. Следующие два обработчика запускают методы resolve и reject.\r\n/*console.log(\"---------------Task 05-----------------\")\r\ntype testObjType = {\r\n    promise: null | Promise<any>;\r\n    resolve: null | Function;\r\n    reject: null | Function;\r\n    onSuccess: (paramName: string) => void;\r\n    onError: (paramName: string) => void;\r\n}\r\n\r\nconst handlePromise: testObjType = {\r\n    promise: null,\r\n    resolve: null,\r\n    reject: null,\r\n    onSuccess: (paramName: string) => {\r\n        console.log(`Promise is resolved with data: ${paramName}`);\r\n    },\r\n    onError: (paramName: string) => {\r\n        console.log(`Promise is rejected with error: ${paramName}`);\r\n    }\r\n}\r\n\r\nexport const createPromise = () => {\r\n    const somePromise: Promise<any> = new Promise((res, rej) => {\r\n        handlePromise.resolve = res;\r\n        handlePromise.reject = rej;\r\n    });\r\n    handlePromise.promise = somePromise;\r\n    handlePromise.promise\r\n        .then(res => handlePromise.onSuccess(res))\r\n        .catch(err => handlePromise.onError(err));\r\n    console.log(handlePromise);\r\n}\r\n\r\nexport const resolvePromise = () => {\r\n    handlePromise.resolve && handlePromise.resolve('Yo');\r\n}\r\n\r\nexport const rejectPromise = () => {\r\n    handlePromise.reject && handlePromise.reject('!!!!');\r\n}\r\n\r\nconsole.log(\"---------------Task 05-----------------\")*/\r\n\r\n//? Task 06\r\n//? Создайте промис, который через 1 с возвращает строку \"My name is\".\r\n//? Создайте функцию onSuccess, которая получает один параметр,\r\n//? прибавляет к нему Ваше имя и возвращает новую строку из функции\r\n//? Создайте функцию print, которая выводит в консоль значение своего параметра\r\n//? Добавьте два метода then и передайте созданные функции.\r\n/*console.log(\"---------------Task 06-----------------\")\r\n\r\nconst onSuccess = (param: any) => {\r\n    return param + \" Yehor\"\r\n}\r\nconst print = (param: any) => {\r\n    console.log(param)\r\n}\r\n\r\nconst p5 = new Promise((res, rej) => {\r\n    setTimeout(() => res(\"My name is\"), 1000)\r\n}).then(data => onSuccess(data)).then((data => print(data)));\r\n\r\nconsole.log(\"---------------Task 06-----------------\")*/\r\n\r\n//? Task 7\r\n//? Создайте три промиса. Первый промис возвращает объект { name: \"Anna\" } через 2с,\r\n//? второй промис возвращает объект {age: 16} через 3 с, а третий {city: ''} через 4с.\r\n//? Получите результаты работы промисов, объедините свойства объектов\r\n//? и выведите в консоль {name, age, city}\r\n\r\n// * 7.1\r\n/*const prom1 = new Promise((res) => {\r\n    setTimeout(() => res({name: \"Anna\"}), 2000)\r\n});\r\n\r\nconst prom2 = new Promise((res) => {\r\n    setTimeout(() => res({age: 16}), 3000)\r\n});\r\n\r\nconst prom3 = new Promise((res) => {\r\n    setTimeout(() => res({city: ''}), 4000)\r\n});\r\n\r\nconst result = Promise.all([prom1, prom2, prom3]).then((res) => {\r\n    console.log(Object.assign(res[0], res[1], res[2]))\r\n})*/\r\n\r\n// * 7.2\r\n/*let prom1: Promise<Object> = new Promise((res) => {\r\n    setTimeout(() => {\r\n        res({name: 'Anna'})\r\n    }, 2000);\r\n});\r\n\r\nlet prom2: Promise<Object> = new Promise((res) => {\r\n    setTimeout(() => {\r\n        res({age: 32});\r\n    }, 3000);\r\n});\r\n\r\nlet prom3: Promise<Object> = new Promise((res) => {\r\n    setTimeout(() => {\r\n        res({city: 'Minsk'});\r\n    }, 4000);\r\n})\r\n\r\nlet result: Promise<Array<Object>> = Promise.all([prom1,prom2,prom3]);\r\nresult\r\n    .then(([a,b,c]: Array<Object>) => ({...a,...b,...c}))\r\n    .then(console.log);*/\r\n\r\n\r\n// ! Tasks for interview PROMISES\r\n\r\n// ?Task 1\r\n\r\n// setTimeout(()=> console.log(1), 0);\r\n// console.log(2);\r\n// (() => console.log(3))();\r\n// Promise.resolve(console.log(4));\r\n\r\n\r\n// ?Task 2\r\n\r\n// new Promise((res, rej) => {\r\n//     console.log(1);\r\n// })\r\n// new Promise((res, rej) => {\r\n//     setTimeout(()=> console.log(2), 0);\r\n// })\r\n// Promise.resolve(setTimeout(()=> console.log(3), 0));\r\n// console.log(4);\r\n// Promise.reject(console.log(5));\r\n\r\n\r\n// ?Task 3\r\n\r\n// (function(){\r\n//     setTimeout(()=> console.log(1), 100);\r\n// })();\r\n// console.log(2);\r\n// new Promise((res, rej) => {\r\n//     setTimeout(()=> console.log(3), 50);\r\n// })\r\n// function f() {\r\n//     console.log(4);\r\n// }\r\n// Promise.resolve(console.log(5));\r\n\r\n\r\n// ?Task 4\r\n\r\n// function f(num:number) {\r\n//     console.log(num);\r\n// }\r\n// Promise.resolve(1).then(f); // .then((num:number) => console.log(num))\r\n// (function(){\r\n//     console.log(2);\r\n// })();\r\n// console.log(3);\r\n// new Promise((res, rej) => {\r\n//     console.log(4);\r\n// });\r\n// setTimeout(f, 0, 5, 3, 5); // f(5, 3, 5)\r\n\r\n\r\n// ?Task 5\r\n\r\n// console.log(1);\r\n// function f() {\r\n//     console.log(2);\r\n// }\r\n// setTimeout(()=>{\r\n//     console.log(3);\r\n//     let p = new Promise((res, rej) => {\r\n//         console.log(4);\r\n//         res();\r\n//     });\r\n//     p.then(() => f())\r\n// },0);\r\n// let l = new Promise((res, rej) => {\r\n//     console.log(5);\r\n//     rej();\r\n// });\r\n// l.then(res => console.log(res)).catch(() => console.log(6));\r\n// console.log(7);\r\n\r\n\r\n// ?Task 6\r\n\r\n// async function sleep(ms:number) {\r\n//     return new Promise((res) => {\r\n//         setTimeout(() => {\r\n//             console.log(ms);\r\n//             res();\r\n//         }, ms*100);\r\n//     });\r\n// }\r\n//\r\n// async function show() {\r\n//     await sleep(3) // => Promise[pending] => after 300 ms => Promise[fulfilled]\r\n//     await sleep(2) // => Promise[pending] => after 200 ms => Promise[fulfilled]\r\n//     await sleep(1) // => Promise[pending] => after 100 ms => Promise[fulfilled]\r\n// }\r\n//\r\n// show();\r\n\r\n//?Task 7\r\n\r\n// let pr1 = new Promise((res) => {\r\n//     res(10);\r\n// });\r\n// let pr2 = new Promise((res) => {\r\n//     res(0)\r\n// });\r\n// pr1\r\n//     .then((res: any) => {\r\n//         console.log(res);\r\n//         return res + 2;\r\n//     })\r\n//     .then((res: any) => {\r\n//         console.log(res);\r\n//         return res + 2;\r\n//     })\r\n//     .then(console.log);\r\n// pr2\r\n//     .then((res: any) => {\r\n//         console.log(res);\r\n//         return res + 1;\r\n//     })\r\n//     .then((res: any) => {\r\n//         console.log(res);\r\n//         return res + 1;\r\n//     })\r\n//     .then(console.log);\r\n\r\n\r\n// just a plug\r\nexport default () => {\r\n};\r\n\r\n","D:\\WebDev\\ReactJS\\IT-INCUBATOR\\JSProject\\src\\lessons\\lesson5\\lesson5.ts",["119","120","121","122","123","124","125","126","127"],"\nconsole.log(\"Lesson 5\");\nexport let str = \"lesson5\";\n// Keyword - this\n// https://developer.mozilla.org/ru/docs/Web/JavaScript/Reference/Operators/this\n// https://learn.javascript.ru/object-methods\n// https://habr.com/ru/company/ruvds/blog/419371/\n// https://www.youtube.com/watch?v=aQkgUUmUJy4&list=PLqKQF2ojwm3l4oPjsB9chrJmlhZ-zOzWT\n\n// А тут заходим и ставим лайк!!!\n// https://www.youtube.com/watch?v=T1vJ8OdJq0o\n\n// https://www.youtube.com/watch?v=xY-mwUzDjsk\n\n// Keyword - new. Function-constructor\n// https://learn.javascript.ru/constructor-new\n// https://metanit.com/web/javascript/4.5.php\n// https://developer.mozilla.org/ru/docs/Web/JavaScript/Reference/Operators/new\n\n// Call, Apply, Bind\n// https://learn.javascript.ru/call-apply-decorators\n// https://medium.com/@stasonmars/%D0%BF%D0%BE%D0%B4%D1%80%D0%BE%D0%B1%D0%BD%D0%BE-%D0%BE-%D0%BC%D0%B5%D1%82%D0%BE%D0%B4%D0%B0%D1%85-apply-call-%D0%B8-bind-%D0%BD%D0%B5%D0%BE%D0%B1%D1%85%D0%BE%D0%B4%D0%B8%D0%BC%D1%8B%D1%85-%D0%BA%D0%B0%D0%B6%D0%B4%D0%BE%D0%BC%D1%83-javascript-%D1%80%D0%B0%D0%B7%D1%80%D0%B0%D0%B1%D0%BE%D1%82%D1%87%D0%B8%D0%BA%D1%83-ddd5f9b06290\n\n//\n// //console.log(this);\n//\n// function f() {\n//     console.log('function f', this);\n// }\n//\n// f();\n\n// let obj = { name: 'Eugene'};\n// obj.f = f;\n// obj.f();\n// obj.k = function () {\n//     console.log('obj.k', this);\n//     f();\n//     setTimeout(function() {console.log('function setTimeout', this)}, 0);\n// }\n\n//obj.k();\n//\n// let arrow = () =>  console.log('arrow function', this);\n// function FF() {\n//     console.log('function f', this);\n//     return () =>  console.log('arrow function', this);\n// }\n// //arrow();\n// //FF()();\n//\n// //obj.ff = FF;\n// //obj.ff()();\n//\n// //obj.ff = FF();\n// //obj.ff();\n//\n// //obj.ff = FF;\n// //let someFunc = obj.ff();\n// //someFunc();\n//\n// /*\n// arrow = () => {\n//     console.log('arrow function', this);\n//     setTimeout(function() {console.log('function setTimeout', this)}, 0);\n//     setTimeout(() => console.log('arrow setTimeout', this), 0);\n// }\n//\n// arrow();\n// */\n//\n// obj = {\n//     name: 'Eugene',\n//     arrow: () => {\n//         console.log('arrow function', this);\n//         setTimeout(function() {console.log('function setTimeout', this)}, 0);\n//         setTimeout(() => console.log('arrow setTimeout', this), 0);\n//     },\n//     dec() {\n//         console.log('arrow function', this);\n//         setTimeout(function() {console.log('function setTimeout', this)}, 0);\n//         setTimeout(() => console.log('arrow setTimeout', this), 0);\n//     }\n// };\n//\n// //obj.arrow();\n// //obj.dec();\n//\n// obj = {\n//     name: 'Eugene',\n//     arrow: () => {\n//         return () => console.log(this);\n//     },\n//     arrow2: () => {\n//         return function () {console.log(this)};\n//     },\n//     dec() {\n//         return function () {console.log(this)};\n//     },\n//     dec2() {\n//         return () => console.log(this);\n//     },\n// };\n//\n// let obj2 = {name: 'Vlad'};\n//\n// //obj2.arrow = obj.arrow;\n// //obj2.arrow()();\n//\n// //obj2.arrow = obj.arrow();\n// //obj2.arrow();\n//\n// //obj2.arrow2 = obj.arrow2;\n// //obj2.arrow2()();\n//\n// //obj2.arrow2 = obj.arrow2();\n// //obj2.arrow2();\n//\n// //obj2.dec = obj.dec;\n// //obj2.dec()();\n//\n// //obj2.dec = obj.dec();\n// //obj2.dec();\n//\n// //obj2.dec2 = obj.dec2;\n// //obj2.dec2()();\n//\n// //obj2.dec2 = obj.dec2();\n// //obj2.dec2();\n//\n\n// * Task 01\n//? Дан объект someObj, реализуйте функцию greeting и присвойте ее ключу объекта с аналогичным именем.\n//? Функция должна вернуть строку `My name is ${name}. I am ${age}`, где name и age берутся из свойств объекта\ntype someObjType = {\n  name: string;\n  age: number;\n  greeting?: Function;\n};\n\nlet someObj: someObjType = {\n  name: \"Eugene\",\n  age: 32,\n};\n\nfunction greeting(this: someObjType) {\n  console.log(`My name is ${this.name}. I am ${this.age}`);\n}\n\n/*console.group(\"Task 01\");\nsomeObj.greeting = greeting;\nsomeObj.greeting();\nconsole.groupEnd();*/\n\n// * Task 02\n//? реализовать счетчик counter в виде объекта со следующими методами:\n//? get current count; - выводит текущее значение счетчика\n//? increment; - увеличивает значение счетчика на 1\n//? decrement; - уменьшает значение счетчика на 1\n//? set current count; - принимает и присваивает значение счетчику\n//? rest current count - устанавливает значение счетчика равным 0\n//? все методы должны ссылаться на сам объект\n\nconst counter = {\n  value: 0,\n\n  getCurrentCount() {\n    console.log(`Current counter value is ${this.value}`);\n    return this;\n  },\n\n  increment() {\n    this.value++;\n    console.log(`Incremented counter ${this.value}`);\n    return this;\n  },\n\n  decrement() {\n    this.value--;\n    console.log(`Decremented counter ${this.value}`);\n    return this;\n  },\n\n  setCurrentCount(startVal: number) {\n    this.value = startVal;\n    console.log(`New counter start value is ${this.value}`);\n    return this;\n  },\n\n  resCurrentCount() {\n    this.value = 0;\n    console.log(`New counter start value is ${this.value}`);\n    return this;\n  },\n};\n\n/*console.group(\"Task 02\");\ncounter.getCurrentCount();\ncounter.increment();\ncounter.increment();\ncounter.increment();\ncounter.decrement();\ncounter.setCurrentCount(12);\ncounter.decrement();\ncounter.resCurrentCount();\n\nconsole.groupEnd();*/\n\n// *Task 03\n//? переделайте код из Task 02, что бы сработал следующий код:\n/*console.group(\"Task 03\");\ncounter\n  .setCurrentCount(10)\n  .increment()\n  .increment()\n  .increment()\n  .decrement()\n  .getCurrentCount(); // 12\nconsole.groupEnd();*/\n\n//* Task 04\n//? Написать функцию конструктор myFirstConstructorFunc которая принимает 2 параметра name и age и возвращает объект\n//? у которого будут эти свойства и метод greeting из Task 01\n\ntype TaskType = {\n  name: string;\n  age: number;\n  greeting?: Function;\n};\n\nfunction myFirstConstructorFunc(this: TaskType, name: string, age: number) {\n  this.name = name;\n  this.age = age;\n  this.greeting = function () {\n    return `My name is ${this.name}. I am ${this.age}`;\n  };\n}\n\n/*console.group(\"Task 04\");\nlet person = new (myFirstConstructorFunc as any)(\"Yehor\", 29);\nconsole.log(person.greeting()) ;\nconsole.groupEnd();*/\n\n//* Task 05\n//? есть 2 объекта One и Two. С помощью bind и метода sayHello заставьте поздороваться объект One\n\nlet One: any = { name: \"One\" };\nlet Two = {\n  name: \"Two\",\n  sayHello: function () {\n    console.log(`Hello, my name is ${this.name}`);\n  },\n};\n\n/*console.group(\"Task 05\");\nTwo.sayHello.bind(One)();\nconsole.groupEnd();*/\n\n// *Task 06\n//? создайте объект helperObj у которого есть следующие методы:\n//? changeName - меняет значение у свойства name объекта на полученное значение\n//? setAge - устанавливает полученное значение в свойство age объекта\n//? greeting - используется функция sayHello из Task 05\n//? можно использовать @ts-ignore\n\nconst helperObj: any = {\n  name: \"new Helper Object\",\n  age: 0,\n\n  changeName(newName: string) {\n    this.name = newName;\n  },\n\n  setAge(newAge: number) {\n    this.age = newAge;\n    console.log(`New object age is ${this.age}`);\n  },\n};\n/*console.group(\"Task 06\");\nhelperObj.greeting = Two.sayHello.bind(helperObj);\nhelperObj.greeting();\nconsole.groupEnd();*/\n\n// * Bind\n//? 1) Дана функция sumTwoNumbers, реализовать функцию bindNumber которая принимает функцию sumTwoNumbers и число, и\n//? возвращает другую функцию, которое также принимает число и возвращает сумму этих чисел. Замыкание использовать нельзя\n\nfunction sumTwoNumbers(a: number, b: number): number {\n  return a + b;\n}\n\nfunction bindNum(f: Function, n: number) {\n  return f.bind(null, n);\n}\n\nlet bindTen = bindNum(sumTwoNumbers, 10);\n\n/*console.group(\"Task 7.1\");\nconsole.log(bindTen(50))\nconsole.groupEnd()*/\n\n//! 2) Напишите функцию которая принимает первым аргументом объект One, а вторым helperObj. Данная функция\n//! возвращает другую функцию которая принимает строку в качестве аргумента и устанавливает ее свойству name объекта One\n\n/*function foo(obj: typeof One, helper: {}): Function {\n\n  return function(this: ReturnType<typeof foo>, str: string) {\n    console.log(this)\n  }\n\n}*/\n\n/*console.group(\"Task 7.2\");\n\nconsole.groupEnd();*/\n\n// 3) Одной строкой установить с помощью helperObj объекту Two поле age в значение 30\n/*console.group(\"Task 7.3\")\nconsole.log(\"Bind-----\")\nhelperObj.setAge.bind(Two, 30)();\nconsole.log(\"Call-----\")\nhelperObj.setAge.call(Two, 30);\nconsole.groupEnd()*/\n\n//! 4) Создать метод hi у объекта One, который всегда вызывает метод greeting объекта helperObj от имени Two\n/*One.hi = function () {};\n\nconsole.group(\"Task 7.4\");\nOne.hi();\nconsole.groupEnd();*/\n\n// Реализовать задачи 2-4 из Bind с помощью Call\n\nlet obj = {\n  name: \"Eugen\",\n  getName(arg: string, arg2: string) {\n    return `${this.name}, ${arg}, ${arg2}`;\n  },\n};\n\nlet obj2 = {\n  name: \"Vlad\",\n};\n\n//@ts-ignore\nobj2.getName = obj.getName;\n//@ts-ignore\n//console.log(obj2.getName.bind(obj, 'bla bla')('Lo lo'));\n//console.log(obj2.getName.call(obj, 'bla bla', 'Lo lo'));\n// console.log(obj2.getName.apply(obj, ['bla bla']));\n\n/* function f(a1: any, a2: any, a3: any) {\n  // ? Это самый выгодный способ сделать из ПСЕВДОМАССИВА массив(Женино видео 07.02.2021 1:39:21)\n  //  ? c точки зрения использования памяти ЕКОНОМИЯ ПАМЯТИ!!!!\n  //@ts-ignore\n  console.log([].forEach.call(arguments, (item => console.log(item))));\n\n}\n\nf(10, 20, 50)*/\n\n// just a plug\nexport default () => {};\n","D:\\WebDev\\ReactJS\\IT-INCUBATOR\\JSProject\\src\\lessons\\lesson6\\lesson6.ts",["128","129","130","131"],"console.log(\"Lesson 6\");\n\n// Class\n// https://learn.javascript.ru/classes\n// https://medium.com/front-stories/%D0%BA%D0%B0%D0%BA-%D1%80%D0%B0%D0%B1%D0%BE%D1%82%D0%B0%D1%8E%D1%82-%D0%BA%D0%BB%D0%B0%D1%81%D1%81%D1%8B-%D0%B2-javascript-7978c0003f1d\n// https://www.typescriptlang.org/docs/handbook/classes.html\n// https://www.youtube.com/watch?v=BASquaxab_w\n// https://www.youtube.com/watch?v=uLY9GXGMXaA\n\n// Task 01\n// Создайте структуру с именем student, содержащую поля: имя и фамилия, номер группы, успеваемость (массив из пяти элементов).\n// Создать массив из десяти элементов такого типа, упорядочить записи по возрастанию среднего балла.\n// Добавить возможность вывода фамилий и номеров групп студентов, имеющих оценки, равные только 4 или 5.\n\n//! Solvation from video\n/*interface IStudent {\n  name: string;\n  surname: string;\n  groupNumber: number;\n  progress: number[];\n  averageMark: number;\n}\n\nclass Student implements IStudent {\n  name: string;\n  surname: string;\n  groupNumber: number;\n  progress: number[];\n  averageMark: number;\n\n  constructor(name: string, surname: string, groupNumber: number, progress: number[]) {\n    this.name = name;\n    this.surname = surname;\n    this.groupNumber = groupNumber;\n    this.progress = progress;\n    this.averageMark = this.progress.reduce((sum, mark) => sum + mark) / this.progress.length;\n  }\n\n  private static sortStudent(s1: Student, s2: Student) {\n    if (s1.averageMark > s2.averageMark) {\n      return 1;\n    } else if (s1.averageMark < s2.averageMark) {\n      return -1;\n    } else {\n      return 0;\n    }\n  }\n\n  static sort(arr:Array<Student>) {\n    const temp = [...arr];\n    return temp.sort(this.sortStudent);\n  }\n\n  private static isAllMarksEqual(marks: number[], mark: number) {\n    return marks.every(item => item === mark);\n  }\n\n  private static filterStudent(arr:Array<Student>) {\n    const result: Array<Student> = [];\n    arr.forEach(item => {\n      if(this.isAllMarksEqual(item.progress, 4) || this.isAllMarksEqual(item.progress, 5)) {\n        result.push(item);\n      }\n    });\n    return result;\n  }\n\n  static printGoodStudent(arr:Array<Student>) {\n    this.filterStudent(arr).forEach(s => {\n      console.log(`Studen - ${s.surname}, Group - ${s.groupNumber}`);\n    });\n  }\n}\n\nlet students:Array<Student> = [];\n\nstudents.push(new Student('Eugene', 'Sheuchuk', 1, [4,4,4,4,4]));\nstudents.push(new Student('Vlad', 'Bizin', 2, [5,5,5,5,5]));\nstudents.push(new Student('Hanna', 'Kicel', 3, [4,5,4,5,5]));\nstudents.push(new Student('Nick', 'Stone', 4, [3,4,3,5,3]));\nstudents.push(new Student('Alex', 'Page', 5, [3,4,3,3,4]));\nstudents.push(new Student('Test', 'Testovich', 6, [3,5,3,5]));\n\n//console.log(Student.sort(students));\nStudent.printGoodStudent(students);*/\n\n\nclass Student {\n  name: string;\n  surname: string;\n  groupNumber: number;\n  progress: Array<number>;\n\n  constructor(\n    name: string,\n    surname: string,\n    groupNumber: number,\n    progress: Array<number>\n  ) {\n    this.name = name;\n    this.surname = surname;\n    this.groupNumber = groupNumber;\n    this.progress = progress;\n  }\n}\n\nconst students = [\n  new Student(\"Joe\", \"Doe\", 13588, [2, 3, 5, 1, 4]),\n  new Student(\"Bill\", \"Milligan\", 13588, [5, 3, 5, 4, 4]),\n  new Student(\"Carl\", \"River\", 12578, [2, 3, 3, 3, 4]),\n  new Student(\"Clara\", \"Mitchal\", 42478, [5, 5, 5, 4, 4]),\n  new Student(\"Noe\", \"Cuer\", 42478, [2, 3, 2, 1, 4]),\n  new Student(\"Tobby\", \"McGouer\", 12578, [5, 5, 5, 4, 3]),\n  new Student(\"Merry\", \"Key\", 13588, [5, 5, 5, 1, 5]),\n  new Student(\"Donald\", \"Trump\", 44232, [5, 5, 5, 5, 5]),\n  new Student(\"Margaret\", \"Tetcher\", 42478, [5, 4, 5, 4, 4]),\n  new Student(\"Tania\", \"Kozlova\", 13588, [5, 5, 5, 5, 5]),\n];\n\nfunction getBestStudent(arr: Array<Student>) {\n  arr.forEach((s) => !s.progress.some((m) => m < 4) && console.log(s));\n}\n\n/*console.group(\"Task 6.1\");\n\nstudents.sort((a, b) => {\n  const middleA = a.progress.reduce((a, n) => a + n) / a.progress.length;\n  const middleB = b.progress.reduce((a, n) => a + n) / a.progress.length;\n  return middleB - middleA;\n});\nconsole.log(\"Sorted bu average progress => \", students);\ngetBestStudent(students);\n\nconsole.groupEnd();*/\n\n// Task 02\n// Создать класс с двумя переменными. Добавить конструктор с входными параметрами и инициализирующий члены класса по умолчанию.\n// Можно ли создать метод на экземпляре класса который будет удалять сам экземпляр класса?\n// Можно ли создать метод класса который будет удалять экземпляр класса?\n\nclass Test {\n  variable1: number;\n  variable2: number;\n\n  constructor(variable1: number, variable2: number) {\n    this.variable1 = variable1;\n    this.variable2 = variable2;\n  }\n}\n\n/*console.group(\"Task 6.2\");\nconsole.log(\"??????????????????\");\nconsole.groupEnd();*/\n\n// Task 03\n// Составить описание класса для представления времени. Предусмотреть возможности установки времени и изменения его отдельных\n// полей (час, минута, секунда) с проверкой допустимости вводимых значений. В случае недопустимых значений полей выбрасываются исключения.\n// Создать методы изменения времени на заданное количество часов, минут и секунд.\n// Создать метод выводящий время в строке формата HH:MM:SS\n// Создать класс по вышеуказанному описанию\n\n/*class Time {\n  date: Date;\n\n  constructor(date: Date) {\n    this.date = date;\n  }\n\n  setHours(hours: number) {\n    if (hours <= 23 && hours >= 0) {\n      this.date.setHours(hours);\n    } else {\n      throw new Error(\"Invalid hours\");\n    }\n  }\n\n  setMinutes(minutes: number) {\n    if (minutes <= 59 && minutes >= 0) {\n      this.date.setMinutes(minutes);\n    } else {\n      throw new Error(\"Invalid minutes\");\n    }\n  }\n\n  setSeconds(seconds: number) {\n    if (seconds <= 59 && seconds >= 0) {\n      this.date.setMinutes(seconds);\n    } else {\n      throw new Error(\"Invalid seconds\");\n    }\n  }\n\n  getTime() {\n    console.log(this.date.toLocaleTimeString(\"ru\"));\n  }\n}\n\nconsole.group(\"Task 6.3\");\n\nconst time = new Time(new Date());\ntime.getTime();\ntime.setHours(21);\ntime.setMinutes(59);\ntime.getTime();\n\nconsole.groupEnd();*/\n\n// Task 04\n// Класс Покупатель: Фамилия, Имя, Адрес, Номер банковского счета;\n// Методы: установка значений атрибутов, получение значений атрибутов, вывод информации.\n// Создать массив объектов данного класса.\n// Вывести список покупателей в алфавитном порядке и список покупателей, у которых номер кредитной карточки находится в заданном диапазоне.\n\n/*class Customer {\n  surname: string;\n  name: string;\n  address: string;\n  _bankAcc: number;\n\n  constructor(surname: string, name: string, address: string) {\n    this.surname = surname;\n    this.name = name;\n    this.address = address;\n    this._bankAcc = this._generateBankAccNumber();\n  }\n\n  _generateBankAccNumber() {\n    return parseInt(String((Math.random() * 9 + 1) * Math.pow(10, 8)), 10);\n  }\n\n  setName(name: string) {\n    this.name = name;\n  }\n\n  getName() {\n    console.log(\"Name: \", this.name);\n  }\n\n  setSurname(surname: string) {\n    this.surname = surname;\n  }\n\n  getSurname() {\n    console.log(\"Surname: \", this.surname);\n  }\n\n  setAddress(address: string) {\n    this.address = address;\n  }\n\n  getAddress() {\n    console.log(\"Address: \", this.address);\n  }\n\n  getBankAcc() {\n    console.log(\"BankAcc: \", this._bankAcc);\n  }\n}\n\nconst customerArr: Customer[] = [\n  new Customer(\"Robinson\", \"Joe\", \"WallStr\"),\n  new Customer(\"Holms\", \"Sherlok\", \"BakerStr\"),\n  new Customer(\"Dark\", \"Jan\", \"LibertyStr\"),\n  new Customer(\"Karenina\", \"Anna\", \"RedStr\"),\n  new Customer(\"Duema\", \"Alexander\", \"NapoleonStr\"),\n];\n\nfunction sortBySurname(arr: Customer[]) {\n  return [...arr].sort((a, b) => {\n    return a.surname.localeCompare(b.surname, \"en\");\n  });\n}\n\nfunction getBankAccRange(from: number, to: number, customers: Customer[]) {\n  return customers.filter((c) => {\n    if (c._bankAcc >= from && c._bankAcc <= to) {\n      return c;\n    }\n  });\n}\n\nconsole.group(\"Task 6.4\");\nconsole.log(customerArr);\nconsole.log(\"Sorted customers => \", sortBySurname(customerArr));\nconsole.log(\n  \"Filtered customer => \",\n  getBankAccRange(400000000, 900000000, customerArr)\n);\nconsole.groupEnd();*/\n\n// Task 05\n// Создать класс машина - имеющий марку, число цилиндров, мощность. Определить конструктор и функцию печати.\n// Создать производный класс – грузовик, имеющий грузоподъемность кузова.\n// Определить функции переназначения марки и грузоподъемности.\n\n/*class Car {\n  model: string;\n  cylinders: number;\n  power: number;\n\n  constructor(model: string, cylinders: number, power: number) {\n    this.model = model;\n    this.cylinders = cylinders;\n    this.power = power;\n  }\n\n  setModel(newModel: string) {\n    console.log(`Car model was changed from => ${this.model} to => ${newModel}`)\n    this.model = newModel;\n  }\n}\n\nclass Truck extends Car {\n  capacity: number;\n\n    constructor(model: string, cylinders: number, power: number, capacity: number) {\n      super(model, cylinders, power);\n      this.capacity = capacity;\n    }\n\n    setCapacity(newCapacity: number) {\n      console.log(`Car capacity was changed from => ${this.capacity} to => ${newCapacity}`)\n      this.capacity = newCapacity;\n    }\n}\n\nconsole.group(\"Task 6.5\");\nconst car = new Car(\"Tesla\", 4, 700);\nconsole.log(car);\ncar.setModel(\"BMW\");\nconsole.log(car);\n\nconst truck = new Truck(\"Man\", 10, 10000, 30000);\nconsole.log(truck)\ntruck.setModel(\"Iveko\")\ntruck.setCapacity(45000);\nconsole.log(truck)\n\nconsole.groupEnd();\n\nconsole.log(Truck instanceof Car) //? why false?*/\n\n// just a plug\nexport default () => {};\n","D:\\WebDev\\ReactJS\\IT-INCUBATOR\\JSProject\\src\\lessons\\lesson7\\lesson7.ts",["132","133","134","135","136","137","138","139","140"],"D:\\WebDev\\ReactJS\\IT-INCUBATOR\\JSProject\\src\\lessons\\lesson7\\file.js",["141","142","143","144","145","146","147","148"],"export default {};\n\nfunction Animal(name = \"Animal\") {\n  this.name = name;\n}\n\nAnimal.prototype.walk = function () {\n  console.log(this.name + \" \" + \"is walking\");\n};\n\nAnimal.prototype.eat = function () {\n  console.log(this.name + \" \" + 'is eating \"Hrum hrum\" ');\n};\n\nAnimal.prototype.sleep = function () {\n  console.log(this.name + \" \" + \"is sleeping, Zzzzzzzz\");\n};\n\nfunction Monkey(name = \"Monkey\") {\n  Animal.call(this, name);\n  this.name = name;\n}\nMonkey.prototype = Object.create(Animal.prototype)\n\nMonkey.prototype.roar = function () {\n  console.log(this.name + \" \" + \"is roaring, Aaaahrrr\");\n};\n\nMonkey.prototype.climb = function () {\n  console.log(this.name + \" \" + \"is climbing\");\n};\n\nfunction Human(name = \"Human\") {\n  Monkey.call(this, name)\n  this.name = name;\n}\nHuman.prototype = Object.create(Monkey.prototype)\n\nHuman.prototype.speak = function () {\n  console.log(this.name + \" \" + \"is speaking, Bla bla bla\");\n}\n\nHuman.prototype.think = function () {\n  console.log(this.name + \" \" + \"is thinking\");\n}\n\n/*console.group(\"7.4 JS file\");\nconst animal = new Animal();\nanimal.walk();\nanimal.eat();\nanimal.sleep();\nconsole.log(\"---------------\");\nconst monkey = new Monkey();\nconsole.log(monkey)\nmonkey.walk();\nmonkey.eat();\nmonkey.sleep();\nmonkey.roar();\nmonkey.climb()\n\nconsole.log(\"---------------\");\nconst human = new Human();\nconsole.log(human)\nhuman.walk();\nhuman.eat();\nhuman.sleep();\nhuman.roar();\nhuman.climb()\nhuman.speak()\nhuman.think()\nconsole.groupEnd()*/\n\n\n/*Function.prototype.myBind = function (context, ...args) {\n  let newThis = this;\n  return function () {\n    return newThis.apply(context, args);\n  }\n}\n\nlet user = {\n  firstName: \"Вася\"\n};\n\nfunction func() {\n  console.log(this.firstName);\n}\n\n\nconsole.group(\"7.5 JS file\");\nlet funcUser = func.myBind(user);\nfuncUser()\nconsole.groupEnd();*/\n\n\n//! Code from lesson 7\n\n//console.log(new String('Evgen'))\n//console.log(new Number(10))\n//console.log([])\n\n// function Person(name) {\n// \tthis.name = name;\n// \tthis.Yo = function () {\n// \t\tconsole.log('Yo')\n// \t}\n// }\n//\n// Person.prototype.bye = function() {\n// \tconsole.log('Bye')\n// }\n//\n// let t = new Person('Evgen');\n//\n// console.dir(Person)\n// console.log(t)\n// console.log(t.__proto__ === Person.prototype);\n//\n// let t2 = new Person('Evgen');\n// console.log(t.Yo === t2.Yo)\n\n// Array.prototype.sum = function() {\n// \treturn this.reduce((acc, item) => acc + item, 0);\n// }\n//\n// let arr = [1, 2, 3];\n//\n// console.log(arr.sum());\n//\n// function sym( arr) {\n// \treturn arr.reduce((acc, item) => acc + item, 0);\n// }\n\n\n\n// function Person(name) {\n// \tthis.name = name;\n// }\n//\n// Person.prototype = {}\n\n\n// class Test {\n//\n// }\n//\n// Test.prototype = {}\n//\n// let t = new Test();\n//\n// console.log(t.__proto__ === Test.prototype)\n//\n// t.__proto__.hi = function () {\n// \tconsole.log('HI')\n// }\n//\n// console.dir(Test)\n\n\n// Task 5\n// Function.prototype._bind = function (ctx, ...args) {\n// \tconst _this = this;\n// \treturn function () {\n// \t\treturn _this.apply(ctx, args);\n// \t}\n// }\n//\n// Function.prototype.__bind = function (ctx, ...args) {\n// \treturn (...ar) => {\n// \t\treturn this.apply(ctx, [...args, ...ar]);\n// \t}\n// }\n\n/*Function.prototype.___bind = function (ctx, ...args) {\n  ctx.__temp__ = this;\n  return function (...a) {\n    return ctx.__temp__(...args, ...a);\n  }\n}*/\n\n/*function f(a, b) {\n  console.log('Foooo', this)\n  // console.log(a)\n  // console.log(b)\n}*/\n\n//f()\n\n/*let obj = {\n  name: 'Evgen',\n}\n\nlet obj2 = {\n  name: 'Vlad',\n}*/\n\n// let res = f.bind(obj, 50).bind(obj2, 800);\n// res(10)\n\n// let res2 = f.___bind(obj, 50).___bind(obj2, 800);\n//res2(0)\n\n\n// ctx = {Evgen}, ...args = 50, __temp__ = f;\n// ctx ={Vlad}, ...args = 800, __temp__ = (...a) => {evgen, __temp__ = f}\n//\t(0) => (...a//0) => {vlad, (...a) => {evgen, __temp__ = f}} => (800, 0) => (50, 800) => f\n\n// console.log('obj', obj)\n// console.log('obj2', obj2)\n\n//\n// function Monster(){};\n// Monster.prototype.growl = () => console.log('Grr!');\n//\n// console.log(new Monster().growl === new Monster().growl);\n//\n// class Test2 {\n// \t//grow = () => {console.log('Grr!')};\n// \tgrow () {console.log('Grr!')};\n// }\n//\n// console.log(new Test2().growl === new Test2().growl);\n\n\n\n\n/*function Animal(size, type) {\n  this.type = type || 'Animal';\n  this.canTalk = false;\n}\n\nAnimal.prototype.speak = function() {\n  if (this.canTalk) {\n    console.log('It spoke!');\n  }\n}\n\nlet Pet = function(size, type, name, owner) {\n  Animal.call(this, size, type);\n  this.size = size;\n  this.name = name;\n  this.owner = owner;\n}\n\nPet.prototype = Object.create(Animal.prototype);\nlet pet1 = new Pet();\n\nconsole.log(pet1);*/\n",["149","150"],"D:\\WebDev\\ReactJS\\IT-INCUBATOR\\JSProject\\src\\lessons\\lesson8\\lesson_8.js",["151","152","153","154","155","156","157","158","159","160","161","162"],{"ruleId":"163","replacedBy":"164"},{"ruleId":"165","replacedBy":"166"},{"ruleId":"167","severity":1,"message":"168","line":3,"column":10,"nodeType":"169","messageId":"170","endLine":3,"endColumn":23},{"ruleId":"167","severity":1,"message":"171","line":4,"column":10,"nodeType":"169","messageId":"170","endLine":4,"endColumn":18},{"ruleId":"167","severity":1,"message":"172","line":10,"column":5,"nodeType":"169","messageId":"170","endLine":10,"endColumn":26},{"ruleId":"167","severity":1,"message":"173","line":12,"column":10,"nodeType":"169","messageId":"170","endLine":12,"endColumn":17},{"ruleId":"167","severity":1,"message":"174","line":12,"column":19,"nodeType":"169","messageId":"170","endLine":12,"endColumn":33},{"ruleId":"167","severity":1,"message":"175","line":15,"column":5,"nodeType":"169","messageId":"170","endLine":15,"endColumn":22},{"ruleId":"167","severity":1,"message":"176","line":16,"column":5,"nodeType":"169","messageId":"170","endLine":16,"endColumn":27},{"ruleId":"167","severity":1,"message":"177","line":17,"column":5,"nodeType":"169","messageId":"170","endLine":17,"endColumn":21},{"ruleId":"167","severity":1,"message":"178","line":18,"column":5,"nodeType":"169","messageId":"170","endLine":18,"endColumn":26},{"ruleId":"167","severity":1,"message":"179","line":19,"column":5,"nodeType":"169","messageId":"170","endLine":19,"endColumn":19},{"ruleId":"167","severity":1,"message":"180","line":13,"column":7,"nodeType":"169","messageId":"170","endLine":13,"endColumn":14},{"ruleId":"167","severity":1,"message":"181","line":17,"column":5,"nodeType":"169","messageId":"170","endLine":17,"endColumn":6},{"ruleId":"167","severity":1,"message":"182","line":18,"column":5,"nodeType":"169","messageId":"170","endLine":18,"endColumn":7},{"ruleId":"167","severity":1,"message":"183","line":19,"column":5,"nodeType":"169","messageId":"170","endLine":19,"endColumn":7},{"ruleId":"167","severity":1,"message":"184","line":20,"column":5,"nodeType":"169","messageId":"170","endLine":20,"endColumn":7},{"ruleId":"167","severity":1,"message":"185","line":22,"column":5,"nodeType":"169","messageId":"170","endLine":22,"endColumn":7},{"ruleId":"163","replacedBy":"186"},{"ruleId":"165","replacedBy":"187"},{"ruleId":"167","severity":1,"message":"188","line":223,"column":10,"nodeType":"169","messageId":"170","endLine":223,"endColumn":18},{"ruleId":"167","severity":1,"message":"189","line":256,"column":7,"nodeType":"169","messageId":"170","endLine":256,"endColumn":14},{"ruleId":"167","severity":1,"message":"190","line":260,"column":48,"nodeType":"169","messageId":"170","endLine":260,"endColumn":54},{"ruleId":"191","severity":1,"message":"192","line":268,"column":1,"nodeType":"193","endLine":268,"endColumn":25},{"ruleId":"167","severity":1,"message":"194","line":1,"column":8,"nodeType":"169","messageId":"170","endLine":1,"endColumn":13},{"ruleId":"191","severity":1,"message":"192","line":55,"column":1,"nodeType":"193","endLine":55,"endColumn":25},{"ruleId":"191","severity":1,"message":"192","line":297,"column":1,"nodeType":"193","endLine":298,"endColumn":3},{"ruleId":"167","severity":1,"message":"195","line":141,"column":5,"nodeType":"169","messageId":"170","endLine":141,"endColumn":25},{"ruleId":"167","severity":1,"message":"196","line":146,"column":10,"nodeType":"169","messageId":"170","endLine":146,"endColumn":18},{"ruleId":"167","severity":1,"message":"197","line":164,"column":7,"nodeType":"169","messageId":"170","endLine":164,"endColumn":14},{"ruleId":"167","severity":1,"message":"198","line":231,"column":10,"nodeType":"169","messageId":"170","endLine":231,"endColumn":32},{"ruleId":"167","severity":1,"message":"199","line":247,"column":5,"nodeType":"169","messageId":"170","endLine":247,"endColumn":13},{"ruleId":"167","severity":1,"message":"200","line":248,"column":5,"nodeType":"169","messageId":"170","endLine":248,"endColumn":8},{"ruleId":"167","severity":1,"message":"201","line":266,"column":7,"nodeType":"169","messageId":"170","endLine":266,"endColumn":21},{"ruleId":"167","severity":1,"message":"202","line":296,"column":5,"nodeType":"169","messageId":"170","endLine":296,"endColumn":12},{"ruleId":"191","severity":1,"message":"192","line":363,"column":1,"nodeType":"193","endLine":363,"endColumn":25},{"ruleId":"167","severity":1,"message":"203","line":107,"column":7,"nodeType":"169","messageId":"170","endLine":107,"endColumn":15},{"ruleId":"167","severity":1,"message":"204","line":120,"column":10,"nodeType":"169","messageId":"170","endLine":120,"endColumn":24},{"ruleId":"167","severity":1,"message":"205","line":141,"column":7,"nodeType":"169","messageId":"170","endLine":141,"endColumn":11},{"ruleId":"191","severity":1,"message":"192","line":344,"column":1,"nodeType":"193","endLine":344,"endColumn":25},{"ruleId":"206","severity":1,"message":"207","line":29,"column":33,"nodeType":"208","messageId":"209","endLine":29,"endColumn":34},{"ruleId":"206","severity":1,"message":"207","line":33,"column":33,"nodeType":"208","messageId":"209","endLine":33,"endColumn":34},{"ruleId":"206","severity":1,"message":"207","line":37,"column":33,"nodeType":"208","messageId":"209","endLine":37,"endColumn":34},{"ruleId":"206","severity":1,"message":"207","line":60,"column":33,"nodeType":"208","messageId":"209","endLine":60,"endColumn":34},{"ruleId":"206","severity":1,"message":"207","line":64,"column":33,"nodeType":"208","messageId":"209","endLine":64,"endColumn":34},{"ruleId":"206","severity":1,"message":"207","line":85,"column":33,"nodeType":"208","messageId":"209","endLine":85,"endColumn":34},{"ruleId":"206","severity":1,"message":"207","line":89,"column":33,"nodeType":"208","messageId":"209","endLine":89,"endColumn":34},{"ruleId":"167","severity":1,"message":"210","line":95,"column":7,"nodeType":"169","messageId":"170","endLine":95,"endColumn":12},{"ruleId":"191","severity":1,"message":"192","line":117,"column":1,"nodeType":"193","endLine":117,"endColumn":25},{"ruleId":"191","severity":1,"message":"211","line":1,"column":1,"nodeType":"193","endLine":1,"endColumn":19},{"ruleId":"206","severity":1,"message":"207","line":8,"column":31,"nodeType":"208","messageId":"209","endLine":8,"endColumn":32},{"ruleId":"206","severity":1,"message":"207","line":12,"column":31,"nodeType":"208","messageId":"209","endLine":12,"endColumn":32},{"ruleId":"206","severity":1,"message":"207","line":16,"column":31,"nodeType":"208","messageId":"209","endLine":16,"endColumn":32},{"ruleId":"206","severity":1,"message":"207","line":26,"column":31,"nodeType":"208","messageId":"209","endLine":26,"endColumn":32},{"ruleId":"206","severity":1,"message":"207","line":30,"column":31,"nodeType":"208","messageId":"209","endLine":30,"endColumn":32},{"ruleId":"206","severity":1,"message":"207","line":40,"column":31,"nodeType":"208","messageId":"209","endLine":40,"endColumn":32},{"ruleId":"206","severity":1,"message":"207","line":44,"column":31,"nodeType":"208","messageId":"209","endLine":44,"endColumn":32},{"ruleId":"163","replacedBy":"164"},{"ruleId":"165","replacedBy":"166"},{"ruleId":"212","severity":1,"message":"213","line":182,"column":1,"nodeType":"214","messageId":"215","endLine":184,"endColumn":2},{"ruleId":"212","severity":1,"message":"213","line":186,"column":1,"nodeType":"214","messageId":"215","endLine":188,"endColumn":2},{"ruleId":"216","severity":1,"message":"217","line":252,"column":5,"nodeType":"169","messageId":"170","endLine":252,"endColumn":12},{"ruleId":"216","severity":1,"message":"218","line":254,"column":10,"nodeType":"169","messageId":"170","endLine":254,"endColumn":21},{"ruleId":"216","severity":1,"message":"219","line":257,"column":10,"nodeType":"169","messageId":"170","endLine":257,"endColumn":16},{"ruleId":"216","severity":1,"message":"220","line":326,"column":10,"nodeType":"169","messageId":"170","endLine":326,"endColumn":11},{"ruleId":"216","severity":1,"message":"221","line":343,"column":14,"nodeType":"169","messageId":"170","endLine":343,"endColumn":16},{"ruleId":"222","severity":1,"message":"223","line":355,"column":12,"nodeType":"224","messageId":"215","endLine":355,"endColumn":16},{"ruleId":"222","severity":1,"message":"223","line":371,"column":12,"nodeType":"224","messageId":"215","endLine":371,"endColumn":16},{"ruleId":"222","severity":1,"message":"223","line":379,"column":12,"nodeType":"224","messageId":"215","endLine":379,"endColumn":16},{"ruleId":"222","severity":1,"message":"223","line":387,"column":12,"nodeType":"224","messageId":"215","endLine":387,"endColumn":16},{"ruleId":"216","severity":1,"message":"225","line":447,"column":10,"nodeType":"169","messageId":"170","endLine":447,"endColumn":15},"no-native-reassign",["226"],"no-negated-in-lhs",["227"],"@typescript-eslint/no-unused-vars","'CurrencyState' is defined but never used.","Identifier","unusedVar","'Dispatch' is defined but never used.","'CurrencyReducersTypes' is defined but never used.","'connect' is defined but never used.","'ConnectedProps' is defined but never used.","'selectAmountOfBYN' is defined but never used.","'selectAmountOfCurrency' is defined but never used.","'selectCurrencies' is defined but never used.","'selectCurrentCurrency' is defined but never used.","'selectIsBuying' is defined but never used.","'lessons' is assigned a value but never used.","'c' is assigned a value but never used.","'d1' is assigned a value but never used.","'l7' is assigned a value but never used.","'l8' is assigned a value but never used.","'l9' is assigned a value but never used.",["226"],["227"],"'superSum' is defined but never used.","'testArr' is assigned a value but never used.","'myFlat' is assigned a value but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'axios' is defined but never used.","'someObj' is assigned a value but never used.","'greeting' is defined but never used.","'counter' is assigned a value but never used.","'myFirstConstructorFunc' is defined but never used.","'One' is assigned a value but never used.","'Two' is assigned a value but never used.","'helperObj' is assigned a value but never used.","'bindTen' is assigned a value but never used.","'students' is assigned a value but never used.","'getBestStudent' is defined but never used.","'Test' is defined but never used.","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","'human' is assigned a value but never used.","Assign object to a variable before exporting as module default","no-extend-native","Number prototype is read only, properties should not be added.","AssignmentExpression","unexpected","no-unused-vars","'sumLoop' is assigned a value but never used.","'getTopsLoop' is defined but never used.","'getSum' is defined but never used.","'f' is defined but never used.","'fo' is defined but never used.","no-eval","eval can be harmful.","CallExpression","'check' is defined but never used.","no-global-assign","no-unsafe-negation"]